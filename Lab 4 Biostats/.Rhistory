install.packages("BSDA")
library("BSDA")
library("ggplot2")
fly.hindleg.RSPM.df <- read.csv("fly_hindleg_RSPM.csv")
expected.frequencies.df <- read.csv("expected_frequencies.csv")
fly.interbeat.df <- read.csv("fly_interbeat.csv")
antennae.DEGs.df <- read.csv("antennae_DEGs.csv")
View(fly.hindleg.RSPM.df)
View(fly.hindleg.RSPM.df)
ggplot(data=fly.hindleg.RSPM.df, aes(x=H)) +
geom_histogram() +
ggtitle("Histogram of RSPM deposition of site H flies") +
xlab("H") +
ylab("count")
ggplot(data=fly.hindleg.RSPM.df, aes(x=L)) +
geom_histogram() +
ggtitle("Histogram of RSPM deposition of site L flies") +
xlab("L") +
ylab("count")
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
shapiro.test(fly.hindleg.RSPM.df$H) #shapiro test for H column
shapiro.test(fly.hindleg.RSPM.df$L) #shapiro test for L column
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
shapiro.test(fly.hindleg.RSPM.df["H"]) #shapiro test for H column
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
shapiro.test(c(fly.hindleg.RSPM.df["H"])) #shapiro test for H column
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
shapiro.test(c(fly.hindleg.RSPM.df[,"H"])) #shapiro test for H column
shapiro.test(c(fly.hindleg.RSPM.df[,"L"])) #shapiro test for L column
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
shapiro.test(fly.hindleg.RSPM.df$H) #shapiro test for H column
shapiro.test(fly.hindleg.RSPM.df$L) #shapiro test for L column
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
shapiro.test(fly.hindleg.RSPM.df$H, data.name="high") #shapiro test for H column
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
shapiro.test(fly.hindleg.RSPM.df$H) #shapiro test for H column
shapiro.test(fly.hindleg.RSPM.df$L) #shapiro test for L column
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
high <- fly.hindleg.RSPM.df$H
shapiro.test(high) #shapiro test for H column
shapiro.test(fly.hindleg.RSPM.df$L) #shapiro test for L column
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
high <- fly.hindleg.RSPM.df$H
low <- fly.hindleg.RSPM.df$L
shapiro.test(high) #shapiro test for H column
shapiro.test(low) #shapiro test for L column
#Plot histograms of RSPM deposition to determine which site has more normal data
ggplot(data=fly.hindleg.RSPM.df, aes(x=H)) +
geom_histogram() +
ggtitle("Histogram of RSPM deposition of site H flies") +
xlab("H") +
ylab("count")
ggplot(data=fly.hindleg.RSPM.df, aes(x=L)) +
geom_histogram() +
ggtitle("Histogram of RSPM deposition of site L flies") +
xlab("L") +
ylab("count")
#Z-Test
z.test(x=high, y = NULL, alternative = "two.sided", mu = 0, sigma.x
= sd(high), sigma.y = NULL, conf.level = 0.95)
#Note for sigma.x argument: Since the sample size is >30, assume that the sample standard deviation is a close-enough estimate of the population standard deviation.
View(fly.hindleg.RSPM.df)
View(fly.hindleg.RSPM.df)
#There’s a fruit fly exposed to the highly-polluted site that has a hindleg RSPM deposition of 1%. What percentage of fruit flies exposed to the same site have a lower hindleg RSPM deposition? Determine this using the z-score, which you’ll need to calculate yourself for this individual fruit fly.
z.test(x=1, mu = mean(high), sigma.x = sd(high))
#There’s a fruit fly exposed to the highly-polluted site that has a hindleg RSPM deposition of 1%. What percentage of fruit flies exposed to the same site have a lower hindleg RSPM deposition? Determine this using the z-score, which you’ll need to calculate yourself for this individual fruit fly.
mean(high)
#There’s a fruit fly exposed to the highly-polluted site that has a hindleg RSPM deposition of 1%. What percentage of fruit flies exposed to the same site have a lower hindleg RSPM deposition? Determine this using the z-score, which you’ll need to calculate yourself for this individual fruit fly.
z.score.fly <- (1-mean(high))/sd(high)
#There’s a fruit fly exposed to the highly-polluted site that has a hindleg RSPM deposition of 1%. What percentage of fruit flies exposed to the same site have a lower hindleg RSPM deposition? Determine this using the z-score, which you’ll need to calculate yourself for this individual fruit fly.
z.score.fly <- (1-mean(high))/sd(high)
z.score.fly
View(fly.interbeat.df)
# Quantifying normality on the fly interbeat data
unexposed <- fly.interbeat.df$U
high <- fly.interbeat.df$H
low <- fly.interbeat.df$L
shapiro.test(unexposed)
shapiro.test(high)
shapiro.test(low)
#Conduct Two Sample t-test on high and low samples
t.test(x=low, y=high, var.equal=TRUE)
#Conduct Two Sample t-test on high and low samples
t.test(x=low, y=high, var.equal=TRUE)
View(antennae.DEGs.df)
View(expected.frequencies.df)
#Load libraries
library("BSDA")
library("ggplot2")
#Load datasets
fly.hindleg.RSPM.df <- read.csv("fly_hindleg_RSPM.csv")
expected.frequencies.df <- read.csv("expected_frequencies.csv", row.names=1)
fly.interbeat.df <- read.csv("fly_interbeat.csv")
antennae.DEGs.df <- read.csv("antennae_DEGs.csv")
View(expected.frequencies.df)
observed.frequencies <- table(expected.frequencies.df$Functions)
observed.frequencies <- table(expected.frequencies.df$Functions)
observed.frequencies
observed.frequencies <- table(antennae.DEGs.df$Functions)
observed.frequencies
observed.frequencies <- table(antennae.DEGs.df$Functions)
observed.frequencies <- table(antennae.DEGs.df$Functions)
observed.frequencies["Other"] <- 0
observed.frequencies
# Create frequencies for the observed DEGs data
observed.frequencies <- table(antennae.DEGs.df$Functions)
observed.frequencies["Other"] <- 0
# Normalize the observed and expected frequencies using proportions
observed.normalized <- observed.frequencies/sum(observed.frequencies)
observed.normalized
# Create frequencies for the observed DEGs data
observed.frequencies <- table(antennae.DEGs.df$Functions)
observed.frequencies["Other"] <- 0
# Normalize the observed and expected frequencies using proportions
observed.normalized <- observed.frequencies/sum(observed.frequencies)
expected.normalized <- expected.frequencies.df$Genome.frequency/sum(expected.frequencies.df$Genome.frequency)
expected.normalized
observed.normalized
# Create frequencies for the observed DEGs data
observed.frequencies <- table(antennae.DEGs.df$Functions)
observed.frequencies["Other"] <- 0
# Normalize the observed and expected frequencies using proportions
observed.normalized <- observed.frequencies/sum(observed.frequencies)
expected.normalized <- expected.frequencies.df["Genome.frequency"]/sum(expected.frequencies.df$Genome.frequency)
expected.normalized
# Create frequencies for the observed DEGs data
observed.frequencies <- table(antennae.DEGs.df$Functions)
observed.frequencies["Other"] <- 0
# Normalize the observed and expected frequencies using proportions
observed.normalized <- observed.frequencies/sum(observed.frequencies)
expected.normalized <- expected.frequencies.df$Genome.frequency/sum(expected.frequencies.df$Genome.frequency)
# Combining the data into a data frame for ggplot
chi.bar.data <- data.frame( "Function"=rep(rownames(expected.frequencies.df), 2),
"O.or.E"=c(rep("O",7),rep("E",7)),
"Proportion"=c(observed.normalized,expected.normalized))
View(chi.bar.data)
# Combining the data into a data frame for ggplot
chi.bar.data <- data.frame( "Function"=rep(rownames(expected.frequencies.df), 2),
"O.or.E"=c(rep("O",7),rep("E",7)),
"Proportion"=c(observed.normalized,expected.normalized))
ggplot(data=chi.bar.data, aes(x=Function, y=Proportion, fill=O.or.E)) +
geom_col(position="dodge")
# Combining the data into a data frame for ggplot
chi.bar.data <- data.frame( "Function"=rep(rownames(expected.frequencies.df), 2),
"O.or.E"=c(rep("O",7),rep("E",7)),
"Proportion"=c(observed.normalized,expected.normalized))
ggplot(data=chi.bar.data, aes(x=Function, y=Proportion, fill=O.or.E)) +
geom_col(position="dodge")
specific.observed <- c( observed.frequencies[specific.function], sum(observed.frequencies) - observed.frequencies[specific.function] )
specific.function <- "Stress response"
specific.observed <- c( observed.frequencies[specific.function], sum(observed.frequencies) - observed.frequencies[specific.function] )
specific.expected <- c( expected.frequencies.df[specific.function,], sum(expected.frequencies.df) - expected.frequencies.df[specific.function,])
specific.expected
specific.observed
specific.expected
specific.observed
chisq.test( specific.observed, p=specific.expected, correct=FALSE, rescale.p = TRUE)
#Load libraries
library("BSDA")
library("ggplot2")
#Load datasets
fly.hindleg.RSPM.df <- read.csv("fly_hindleg_RSPM.csv")
expected.frequencies.df <- read.csv("expected_frequencies.csv", row.names=1)
fly.interbeat.df <- read.csv("fly_interbeat.csv")
antennae.DEGs.df <- read.csv("antennae_DEGs.csv")
#Plot histograms of RSPM deposition to determine which site has more normal data
ggplot(data=fly.hindleg.RSPM.df, aes(x=H)) +
geom_histogram() +
ggtitle("Histogram of RSPM deposition of site H flies") +
xlab("H") +
ylab("count")
ggplot(data=fly.hindleg.RSPM.df, aes(x=L)) +
geom_histogram() +
ggtitle("Histogram of RSPM deposition of site L flies") +
xlab("L") +
ylab("count")
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
high <- fly.hindleg.RSPM.df$H
low <- fly.hindleg.RSPM.df$L
shapiro.test(high) #shapiro test for H column
shapiro.test(low) #shapiro test for L column
#Z-Test
z.test(x=high, y = NULL, alternative = "two.sided", mu = 0, sigma.x
= sd(high), sigma.y = NULL, conf.level = 0.95)
#Note for sigma.x argument: Since the sample size is >30, assume that the sample standard deviation is a close-enough estimate of the population standard deviation.
#There’s a fruit fly exposed to the highly-polluted site that has a hindleg RSPM deposition of 1%. What percentage of fruit flies exposed to the same site have a lower hindleg RSPM deposition? Determine this using the z-score, which you’ll need to calculate yourself for this individual fruit fly.
z.score.fly <- (1-mean(high))/sd(high)
z.score.fly
# Quantifying normality on the fly interbeat data
unexposed <- fly.interbeat.df$U
high <- fly.interbeat.df$H
low <- fly.interbeat.df$L
shapiro.test(unexposed)
shapiro.test(low)
shapiro.test(high)
#Conduct Two Sample t-test on high and low samples
t.test(x=low, y=high, var.equal=TRUE)
# Create frequencies for the observed DEGs data
observed.frequencies <- table(antennae.DEGs.df$Functions)
observed.frequencies["Other"] <- 0
# Normalize the observed and expected frequencies using proportions
observed.normalized <- observed.frequencies/sum(observed.frequencies)
expected.normalized <- expected.frequencies.df$Genome.frequency/sum(expected.frequencies.df$Genome.frequency)
# Combining the data into a data frame for ggplot
chi.bar.data <- data.frame( "Function"=rep(rownames(expected.frequencies.df), 2),
"O.or.E"=c(rep("O",7),rep("E",7)),
"Proportion"=c(observed.normalized,expected.normalized))
# Generating the plot
ggplot(data=chi.bar.data, aes(x=Function, y=Proportion, fill=O.or.E)) +
geom_col(position="dodge")
specific.function <- "Stress response"
specific.observed <- c( observed.frequencies[specific.function], sum(observed.frequencies) - observed.frequencies[specific.function] )
specific.expected <- c( expected.frequencies.df[specific.function,], sum(expected.frequencies.df) - expected.frequencies.df[specific.function,])
chisq.test( specific.observed, p=specific.expected, correct=FALSE, rescale.p = TRUE)
#Load libraries
library("BSDA")
library("ggplot2")
#Load datasets
fly.hindleg.RSPM.df <- read.csv("fly_hindleg_RSPM.csv")
expected.frequencies.df <- read.csv("expected_frequencies.csv", row.names=1)
fly.interbeat.df <- read.csv("fly_interbeat.csv")
antennae.DEGs.df <- read.csv("antennae_DEGs.csv")
#Plot histograms of RSPM deposition to determine which site has more normal data
ggplot(data=fly.hindleg.RSPM.df, aes(x=H)) +
geom_histogram() +
ggtitle("Histogram of RSPM deposition of site H flies") +
xlab("H") +
ylab("count")
ggplot(data=fly.hindleg.RSPM.df, aes(x=L)) +
geom_histogram() +
ggtitle("Histogram of RSPM deposition of site L flies") +
xlab("L") +
ylab("count")
#Quantify normality using Shapiro-Wilk test
#Note: For this test, the null hypothesis is that the data are normal, so a high p-value suggests normal distribution.
high <- fly.hindleg.RSPM.df$H
low <- fly.hindleg.RSPM.df$L
shapiro.test(high) #shapiro test for H column
shapiro.test(low) #shapiro test for L column
#Z-Test
z.test(x=high, y = NULL, alternative = "two.sided", mu = 0, sigma.x
= sd(high), sigma.y = NULL, conf.level = 0.95)
#Note for sigma.x argument: Since the sample size is >30, assume that the sample standard deviation is a close-enough estimate of the population standard deviation.
#There’s a fruit fly exposed to the highly-polluted site that has a hindleg RSPM deposition of 1%. What percentage of fruit flies exposed to the same site have a lower hindleg RSPM deposition? Determine this using the z-score, which you’ll need to calculate yourself for this individual fruit fly.
z.score.fly <- (1-mean(high))/sd(high)
z.score.fly
# Quantifying normality on the fly interbeat data
unexposed <- fly.interbeat.df$U
high <- fly.interbeat.df$H
low <- fly.interbeat.df$L
shapiro.test(unexposed)
shapiro.test(low)
shapiro.test(high)
#Conduct Two Sample t-test on high and low samples
t.test(x=low, y=high, var.equal=TRUE)
# Create frequencies for the observed DEGs data
observed.frequencies <- table(antennae.DEGs.df$Functions)
observed.frequencies["Other"] <- 0
# Normalize the observed and expected frequencies using proportions
observed.normalized <- observed.frequencies/sum(observed.frequencies)
expected.normalized <- expected.frequencies.df$Genome.frequency/sum(expected.frequencies.df$Genome.frequency)
# Combining the data into a data frame for ggplot
chi.bar.data <- data.frame( "Function"=rep(rownames(expected.frequencies.df), 2),
"O.or.E"=c(rep("O",7),rep("E",7)),
"Proportion"=c(observed.normalized,expected.normalized))
# Generating the plot
ggplot(data=chi.bar.data, aes(x=Function, y=Proportion, fill=O.or.E)) +
geom_col(position="dodge")
specific.function <- "Stress response"
specific.observed <- c( observed.frequencies[specific.function], sum(observed.frequencies) - observed.frequencies[specific.function] )
specific.expected <- c( expected.frequencies.df[specific.function,], sum(expected.frequencies.df) - expected.frequencies.df[specific.function,])
chisq.test( specific.observed, p=specific.expected, correct=FALSE, rescale.p = TRUE)
